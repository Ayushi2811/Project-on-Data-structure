/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy=new ListNode(0);
        ListNode k=dummy;
        while(true){
            if(l1==null){
                k.next=l2;
                break;
            }  
            if(l2==null){
                k.next=l1;
                break;
            }  
            if(l1.val<l2.val){
                k.next=l1;
                k=k.next;
                l1=l1.next;
            }
            else if(l1.val>l2.val){
                k.next=l2;
                k=k.next;
                l2=l2.next;
            }
            else{
                k.next=l1;
                k=k.next;
                l1=l1.next;
                k.next=l2;
                k=k.next;
                l2=l2.next;
            }
        }
        while(l1!=null){
             k.next=l1;
            k=k.next;
            l1=l1.next;
        }
        while(l2!=null){
            k.next=l2;
            k=k.next;
                l2=l2.next;
        }
        return dummy.next;
    }
}